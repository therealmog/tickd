def registerClicked(self):
        setMessage = self.setMessage

        self.checkboxRememberMe.disableClicks()
        self.btnConfirm.place_forget()
        newEmail = self.entryEmail.get()
        newPassword = self.entryPassword.get()

        details,_ = getAllDetails()
        found,_ = self.checkDetailsFound(newEmail,details)
        emailEmpty,passwordEmpty = self.checkEmpty(newEmail,newPassword)
        emailValid = self.checkEmail(newEmail)

        if found:
            setMessage("Email already registered with another account","black")
        elif emailEmpty:
            setMessage("Please enter the email you would like to register with.","black")
        elif passwordEmpty:
            setMessage("Please enter a password to use with this account.","black")
        elif not emailValid:
            setMessage("Please enter a valid email.","black")
        else:
            setMessage("Would you like to register a new account with these details?","black")
            self.btnConfirm.configure(command=self.btnRegisterConfirmClicked)
            self.btnConfirm.place(in_=self.btnRegister,x=75,y=150)

    def btnRegisterConfirmClicked(self):
        self.btnConfirm.place_forget()
        newEmail = self.entryEmail.get()
        newPassword = self.entryPassword.get()

        newDetails = [newEmail,newPassword,""]

        details,rememberMeIndex = getAllDetails()
        details.append(newDetails)
        newAuthDetails = {"details":details,"rememberMe":rememberMeIndex}

        print(newAuthDetails)
        
        with open("authDetails.json","w") as f:
            json.dump(newAuthDetails,f,indent=4)
        
        self.resetEntry(["entryEmail","entryPassword"])
        createUserFolder(userPath=f"users//{newEmail}") # Creates new folder for the new user with one "inbox.json" list
        self.setMessage("Account successfully created. Please log in.","limegreen")
        self.checkboxRememberMe.enableClicks()